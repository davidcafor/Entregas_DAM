/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Ejercicio1;

import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author davidcf
 */
public class BajaCliente extends javax.swing.JDialog {

    /**
     * Creates new form BajaFiesta
     */
    public BajaCliente(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        cargarComboClientes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        cmbClientes = new javax.swing.JComboBox<>();
        btnEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Eliminar fiesta");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel2.setText("Clientes");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(40, 40, 50, 16);

        getContentPane().add(cmbClientes);
        cmbClientes.setBounds(100, 40, 290, 22);

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar);
        btnEliminar.setBounds(410, 40, 90, 22);

        setSize(new java.awt.Dimension(547, 144));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        
        //COMPRUEBO SI HAY ELEMENTOS EN EL COMBO, de ser as√≠ hago una consulta para eliminarlo de la base de datos y actualizo el combo
        if (cmbClientes.getSelectedItem() != null) {

            Cliente c = (Cliente) cmbClientes.getSelectedItem();

            //CONSULTA
            Statement sentencia;

            try {
                sentencia = Conexion.getCon().createStatement();
                String consulta = "DELETE FROM CLIENTES WHERE dniCliente = '" + c.getDniCliente() + "'";
                sentencia.executeUpdate(consulta);

                cargarComboClientes();

            } catch (SQLIntegrityConstraintViolationException e) { //EN ESTE CATCH ME ASEGURO DE QUE EL USUARIO SEPA QUE ESTA BORRANDO UNA FOREIGN KEY Y NO LE DEJE
                JOptionPane.showMessageDialog(this, "No se puede eliminar un cliente con reservas activas");
            } catch (SQLException ex) {
                System.out.println("Error Baja Cliente - Eliminar: " + ex);
            } catch (Exception e) {
                System.out.println("Error Baja Cliente - Eliminar: " + e);
            } 

        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        //EN caso de cerrar la ventana reduzco en una unidad el contador (solo puede haber una ventan visible al tiempo)
        ((FrmPPal)getOwner()).contadorBajaCliente--;
        ((FrmPPal)getOwner()).listaVentanas.remove(this);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BajaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BajaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BajaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BajaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BajaCliente dialog = new BajaCliente(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    //Metodo para cargar el combo mediante una consulta a la base de datos de clientes
    void cargarComboClientes() {

        Statement sentencia;

        try {

            cmbClientes.removeAllItems();

            sentencia = Conexion.getCon().createStatement();
            String consulta = "SELECT * FROM CLIENTES";
            ResultSet rs = sentencia.executeQuery(consulta);
            while (rs.next()) {
                Cliente c = new Cliente(rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5));
                cmbClientes.addItem(c);
            }

        } catch (SQLException e) {
            System.out.println("Error Baja Cliente: " + e);
        } catch (Exception e) {
            System.out.println("Error Baja Cliente: " + e);
        } 

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JComboBox<Cliente> cmbClientes;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
